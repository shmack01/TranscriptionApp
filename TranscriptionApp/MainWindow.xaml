<?xml version="1.0" encoding="utf-8"?>
 <!--
  
  Sample Code is provided for the purpose of illustration only and is not intended to be used in a 
  production environment. THIS SAMPLE CODE AND ANY RELATED INFORMATION ARE PROVIDED "AS IS" WITHOUT 
  WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED 
  WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A PARTICULAR PURPOSE. 
  We grant You a nonexclusive, royalty-free right to use and modify the Sample Code and to 
  reproduce and distribute the object code form of the Sample Code, provided that. 
  You agree: (i) to not use Our name, logo, or trademarks to market 
  Your software product in which the Sample Code is embedded; (ii) to include a 
  valid copyright notice on Your software product in which the Sample Code is 
  embedded; and (iii) to indemnify, hold harmless, and defend Us and 
  Our suppliers from and against any claims or lawsuits, including attorneysâ€™ fees, 
  that arise or result from the use or distribution of the Sample Code
  
   Copyright (c) Microsoft. All rights reserved.
   THIS CODE IS PROVIDED *AS IS* WITHOUT WARRANTY OF
   ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING ANY
   IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR
   PURPOSE, MERCHANTABILITY, OR NON-INFRINGEMENT.  
 -->
<Window
    x:Class="TranscriptionApp.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:TranscriptionApp"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Grid Background="SlateGray">
        <Grid Margin="50,50,50,50" BorderBrush="Silver" BorderThickness="3" Background="SlateGray">
            <Grid.RowDefinitions >
                <RowDefinition Height="Auto" MinHeight="10"/>
                <RowDefinition Height="Auto" MinHeight="10" />
                <RowDefinition Height="Auto" MinHeight="200"/>
                <RowDefinition Height="Auto" MinHeight="200" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Border BorderThickness="0" BorderBrush="White" 
            Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="3"/>
            <!--<Border BorderThickness="1" BorderBrush="White" 
Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="3" />-->
            <!--<Border BorderThickness="1" BorderBrush="BlueViolet" 
Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="3"/>-->
            <StackPanel Grid.Row="0" Grid.Column="0" VerticalAlignment="Bottom" >
                <CheckBox x:Name="autoDetectcheck">
                    <TextBlock Foreground="White" Text="Auto Detect Language" />
                </CheckBox>
            </StackPanel>
            <StackPanel Grid.Row="0" Grid.Column="1"  Margin="0,10,10,0" Orientation="Horizontal" VerticalAlignment="Bottom" HorizontalAlignment="Right">
                <TextBlock Margin="0" TextWrapping="Wrap" Foreground="White" Text="Translate From: " VerticalAlignment="Center"/>
                <ComboBox x:Name="langFromcb" Grid.Row="0" Margin="5" Grid.Column="0"  IsEnabled="{x:Bind autoDetectcheck.IsChecked.Value.Equals(x:False),Mode=OneWay}" HorizontalAlignment="Right" DisplayMemberPath="{Binding Source=Name}" SelectedItem="{Binding Source=ConvertFromLanguage}" SelectionChanged="langFromcb_SelectionChanged">
                </ComboBox>
            </StackPanel>
            <StackPanel Grid.Row="0" Grid.Column="2" Margin="0,10,10,0" Orientation="Horizontal" VerticalAlignment="Bottom" HorizontalAlignment="Left">
                <TextBlock  Margin="5" TextWrapping="Wrap" Foreground="White" Text="Translate To: " VerticalAlignment="Center"/>
                <ComboBox x:Name="langTocb" Grid.Row="0" Margin="5" Grid.Column="1" HorizontalAlignment="Left"  DisplayMemberPath="{Binding Source=Name}"  SelectedItem="{Binding Source=ConvertToLanguage}" SelectionChanged="langTocb_SelectionChanged">

                </ComboBox>
            </StackPanel>
            <StackPanel Grid.Row="1" Grid.Column="0"   Grid.ColumnSpan="3" Margin="0,10,10,0" Orientation="Horizontal" >
                <Button x:Name="EnableMicrophoneButton" Background="DodgerBlue" Content="Enable Microphone"  Margin="0,0,10,0" Click="EnableMicrophone_ButtonClicked"/>
                <Button x:Name="SpeechRecognitionButton" Background="DodgerBlue" Content="Start Speech recognition" Margin="0,0,10,0" Click="SpeechRecognitionFromMicrophone_ButtonClicked" />
                <Button x:Name="StopSpeechRecognitionButton" Background="DodgerBlue" Content="Stop Speech recognition" Margin="0,0,10,0" Click="StopSpeechRecognitionFromMicrophone_ButtonClicked" />
            </StackPanel>
            <!-- <StackPanel> -->
            <StackPanel Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="3"  Orientation="Vertical"  VerticalAlignment="Top" RelativePanel.AlignBottomWithPanel="True" RelativePanel.AlignRightWithPanel="True" RelativePanel.AlignLeftWithPanel="True">
                <TextBlock x:Name="StatusLabel" Foreground="White" Margin="0,10,10,0" TextWrapping="Wrap" Text="Status:" FontSize="20"/>
                <StackPanel x:Name="StatusPanel" Margin="10" Background="WhiteSmoke" Orientation="Vertical" RelativePanel.AlignBottomWithPanel="True" RelativePanel.AlignRightWithPanel="True" RelativePanel.AlignLeftWithPanel="True">

                    <Border x:Name="StatusBorder" Margin="1"  BorderThickness="1" Background="WhiteSmoke">
                        <ScrollViewer x:Name="StatusScroller"  VerticalScrollMode="Auto"  VerticalScrollBarVisibility="Auto" MaxHeight="200">
                            <!-- Use LiveSetting to enable screen readers to announce the status update. -->
                            <TextBlock x:Name="StatusBlock" Text="Enable Microphone before starting Speech-to-Text" FontWeight="Bold" AutomationProperties.LiveSetting="Assertive"
                        Width="{Binding ElementName=StatusBorder, Path=ActualWidth}" Margin="10,10,10,20" TextWrapping="Wrap"  />
                        </ScrollViewer>
                    </Border>

                </StackPanel>


            </StackPanel>
            <StackPanel Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="3"   x:Name="TranslatePanel"  Orientation="Vertical" RelativePanel.AlignBottomWithPanel="True" RelativePanel.AlignRightWithPanel="True" RelativePanel.AlignLeftWithPanel="True">
                <TextBlock x:Name="TranslateLabel" Foreground="White" Margin="0,10,10,0" TextWrapping="Wrap" Text="Translation:" FontSize="20"/>
                <StackPanel  Margin="10" Orientation="Vertical" Background="WhiteSmoke" RelativePanel.AlignBottomWithPanel="True" RelativePanel.AlignRightWithPanel="True" RelativePanel.AlignLeftWithPanel="True">

                    <Border x:Name="TranslateBorder" Margin="1" BorderBrush="Red" BorderThickness="0" Background="WhiteSmoke">
                        <ScrollViewer x:Name="TranslateScroller"  VerticalScrollMode="Auto"  VerticalScrollBarVisibility="Auto" MaxHeight="200">
                            <!-- Use LiveSetting to enable screen readers to announce the status update. -->
                            <TextBlock x:Name="TranslateBlock" FontWeight="Bold" AutomationProperties.LiveSetting="Assertive"
             Width="{Binding ElementName=TranslateBorder, Path=ActualWidth}" Margin="10,10,10,20" TextWrapping="Wrap"  />
                        </ScrollViewer>
                    </Border>
                </StackPanel>
            </StackPanel>
            <!-- </StackPanel> -->


        </Grid>
    </Grid>
</Window>
